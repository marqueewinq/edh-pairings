x-environment: &shared-envvar
  POSTGRES_USER: "pairings"
  POSTGRES_PASSWORD: "postgres"
  DATABASE_URL: "postgresql://pairings:postgres@db:5432/postgres"
  ALLOWED_HOSTS: '["edh.marqueewinq.xyz"]'
  CORS_ALLOWED_ORIGINS: '["https://edh.marqueewinq.xyz"]'
  BASE_URL: "https://edh.marqueewinq.xyz/"
  DONATE_LINK_RU: "https://www.tinkoff.ru/rm/vinogradov.mark2/aAtTu4590"
  EMAIL_HOST: "mail.smtp2go.com"
  EMAIL_PORT: 2525

services:
  db:
    image: postgres:10
    environment:
      <<: *shared-envvar
    volumes:
      - ./misc/dbdata:/var/lib/postgresql/data

  web:
    image: edhpairings
    build: .
    environment:
      <<: *shared-envvar
    env_file:
      - .env
    # Docker hack to wait until Postgres is up, then run stuff.
    command: >
      bash -c "while ! nc -w 1 -z db 5432;
               do sleep 0.1;
               done;
               ./manage.py migrate;
               while :;
               do ./manage.py runserver 0.0.0.0:80;
               sleep 1;
               done"
    ports:
      - "8010:80"
    volumes:
      - ./pairings:/code
    depends_on:
      - db

  test:
    image: edhpairings
    build: .
    environment:
      <<: *shared-envvar
    env_file:
      - .env
    command: >
      bash -c "while ! nc -w 1 -z db 5432;
               do sleep 0.1;
               done;
               ./manage.py migrate;
               ./manage.py test;
               "
    volumes:
      - ./pairings:/code
    depends_on:
      - db
